{"version":3,"file":"bundle.js","mappings":"mBAGAA,SAASC,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAOF,SAASG,cAAc,aAC9BC,EAAQJ,SAASG,cAAc,oBAC/BE,EAAeL,SAASG,cAAc,sBAGxCG,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAoDzD,SAASC,IACLN,EAAaO,UAAY,GAEzBN,EAAMO,SAAQ,SAAAC,GACV,IAAMC,EAAKf,SAASgB,cAAc,MAClCD,EAAGE,UAAY,aAAHC,OAAgBJ,EAAKK,UAAY,qBAAuB,IACpEJ,EAAGK,QAAQC,GAAKP,EAAKO,GAErBN,EAAGH,UAAY,4CAAHM,OACiBJ,EAAKK,UAAY,UAAY,GAAE,4DAAAD,OACjBJ,EAAKQ,KAAI,8FAIpDjB,EAAakB,YAAYR,EAC7B,GACJ,CAGA,SAASS,IACLf,aAAagB,QAAQ,QAASlB,KAAKmB,UAAUpB,GACjD,CAtEAK,IAGAT,EAAKD,iBAAiB,UAAU,SAAS0B,GACrCA,EAAEC,iBAEF,IAAMC,EAAWzB,EAAM0B,MAAMC,OAC7B,GAAgB,KAAbF,EAEH,GAAGvB,EAAM0B,MAAK,SAAAlB,GAAI,OAAIA,EAAKQ,OAASO,CAAQ,IACxCI,MAAM,oCADV,CAKA,IAAMC,EAAU,CACZb,GAAIc,KAAKC,MACTd,KAAMO,EACNV,WAAW,GAGfb,EAAM+B,KAAKH,GACXV,IACAb,IACAP,EAAM0B,MAAQ,EAXd,CAYJ,IAGAzB,EAAaJ,iBAAiB,SAAS,SAAS0B,GAC5C,IAAMW,EAASX,EAAEW,OACXC,EAAWD,EAAOE,QAAQ,cAC1BC,EAASC,SAASH,EAASnB,QAAQC,KAGtCiB,EAAOK,UAAUC,SAAS,uBACzBtC,EAAQA,EAAMuC,QAAO,SAAA/B,GAAI,OAAIA,EAAKO,KAAOoB,CAAM,IAC/CjB,IACAb,KAIe,aAAhB2B,EAAOQ,QACOxC,EAAMyC,MAAK,SAAAjC,GAAI,OAAIA,EAAKO,KAAOoB,CAAM,IAC7CtB,UAAYmB,EAAOU,QACxBxB,IACAe,EAASI,UAAUM,OAAO,qBAAsBX,EAAOU,SAE/D,GAyBJ,G","sources":["webpack://lesson_22_webpack/./src/js/main.js"],"sourcesContent":["import '../main.css';\nimport '../sass/style.scss';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const form = document.querySelector('.js--form');\n    const input = document.querySelector('.js--form__input');\n    const todosWrapper = document.querySelector('.js--todos-wrapper');\n    \n    \n    let todos = JSON.parse(localStorage.getItem('todos')) || [];\n    \n    // Задачи существуют?\n    renderTodos();\n    \n    // добавить задачу\n    form.addEventListener('submit', function(e) {\n        e.preventDefault();\n               \n        const todoText = input.value.trim();\n        if(todoText === '') return;\n\n        if(todos.some(todo => todo.text === todoText)) {\n            alert('Такая задача уже существует!');\n            return;\n        }\n        \n        const newTodo = {\n            id: Date.now(),\n            text: todoText,\n            completed: false\n        };\n        \n        todos.push(newTodo);\n        saveTodos();\n        renderTodos();\n        input.value = '';\n    });\n    \n    // удаление и чекбокс\n    todosWrapper.addEventListener('click', function(e) {\n        const target = e.target;\n        const todoItem = target.closest('.todo-item');\n        const todoId = parseInt(todoItem.dataset.id);\n        \n        // Удаление задачи\n        if(target.classList.contains('todo-item__delete')) {\n            todos = todos.filter(todo => todo.id !== todoId);\n            saveTodos();\n            renderTodos();\n        }\n        \n        // Переключение статуса задачи\n        if(target.type === 'checkbox') {\n            const todo = todos.find(todo => todo.id === todoId);\n            todo.completed = target.checked;\n            saveTodos();\n            todoItem.classList.toggle('todo-item--checked', target.checked);\n        }\n    });\n    \n\n    function renderTodos() {\n        todosWrapper.innerHTML = '';\n        \n        todos.forEach(todo => {\n            const li = document.createElement('li');\n            li.className = `todo-item ${todo.completed ? 'todo-item--checked' : ''}`;\n            li.dataset.id = todo.id;\n            \n            li.innerHTML = `\n                <input type=\"checkbox\" ${todo.completed ? 'checked' : ''}>\n                <span class=\"todo-item__description\">${todo.text}</span>\n                <button class=\"todo-item__delete\">Видалити</button>\n            `;\n            \n            todosWrapper.appendChild(li);\n        });\n    }\n    \n    // Сохранение в localStorage\n    function saveTodos() {\n        localStorage.setItem('todos', JSON.stringify(todos));\n    }\n});\n"],"names":["document","addEventListener","form","querySelector","input","todosWrapper","todos","JSON","parse","localStorage","getItem","renderTodos","innerHTML","forEach","todo","li","createElement","className","concat","completed","dataset","id","text","appendChild","saveTodos","setItem","stringify","e","preventDefault","todoText","value","trim","some","alert","newTodo","Date","now","push","target","todoItem","closest","todoId","parseInt","classList","contains","filter","type","find","checked","toggle"],"sourceRoot":""}